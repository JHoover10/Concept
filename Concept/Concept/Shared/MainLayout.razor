@inherits LayoutComponentBase

@inject IJSRuntime JSRuntime
@inject MainLayoutViewModel ViewModel
@inject LocalDataStore LocalDataStore

<MudThemeProvider Theme="_currentTheme" />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudButton Color="Color.Inherit" Link="/">
            <MudText Typo="Typo.h5">Concept</MudText>
        </MudButton>
        <MudSpacer />
        <CascadingValue Value="@ViewModel.ConceptCategories">
            <MudTooltip Text="Change concept categories">
                <MudIconButton Icon="@Icons.Material.Filled.Book" Color="Color.Inherit" Edge="Edge.End" Link="changeconcepts" />
            </MudTooltip>
        </CascadingValue>
        <MudTooltip Text="Toggle light/dark theme">
            <MudIconButton Icon="@_themeIcon" Color="Color.Inherit" Edge="Edge.End" OnClick="DarkMode" />
        </MudTooltip>
    </MudAppBar>
    <MudMainContent>
        <CascadingValue Value="@ViewModel.ConceptCategories">
            @Body
        </CascadingValue>
    </MudMainContent>
</MudLayout>

@code {
    private bool _isSynchronizing = false;
    private string _themeIcon = Icons.Material.Filled.DarkMode;
    private MudTheme _currentTheme = new MudTheme();
    private MudTheme _defaultTheme = new MudTheme()
    {
        Palette = new Palette()
        {
            Black = "#272c34"
        }
    };

    private MudTheme _darkTheme = new MudTheme()
    {
        Palette = new Palette()
        {
            Black = "#27272f",
            Background = "#32333d",
            BackgroundGrey = "#27272f",
            Surface = "#373740",
            DrawerBackground = "#27272f",
            DrawerText = "rgba(255,255,255, 0.50)",
            DrawerIcon = "rgba(255,255,255, 0.50)",
            AppbarBackground = "#27272f",
            AppbarText = "rgba(255,255,255, 0.70)",
            TextPrimary = "rgba(255,255,255, 0.70)",
            TextSecondary = "rgba(255,255,255, 0.50)",
            ActionDefault = "#adadb1",
            ActionDisabled = "rgba(255,255,255, 0.26)",
            ActionDisabledBackground = "rgba(255,255,255, 0.12)",
            Divider = "rgba(255,255,255, 0.12)",
            DividerLight = "rgba(255,255,255, 0.06)",
            TableLines = "rgba(255,255,255, 0.12)",
            LinesDefault = "rgba(255,255,255, 0.12)",
            LinesInputs = "rgba(255,255,255, 0.3)",
            TextDisabled = "rgba(255,255,255, 0.2)"
        }
    };

    protected override async Task OnInitializedAsync()
    {
        _currentTheme = _defaultTheme;

        await Synchronize();
        await ViewModel.AddConceptCategories();
    }

    private async Task Synchronize()
    {
        _isSynchronizing = true;

        try
        {
            await LocalDataStore.SynchronizeAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }

        _isSynchronizing = false;
    }

    private void DarkMode()
    {
        if (_currentTheme == _defaultTheme)
        {
            _currentTheme = _darkTheme;
            _themeIcon = Icons.Material.Filled.LightMode;
        }
        else
        {
            _currentTheme = _defaultTheme;
            _themeIcon = Icons.Material.Filled.DarkMode;
        }
    }
}