@inherits LayoutComponentBase

@inject MainLayoutViewModel ViewModel

<MudThemeProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudText Typo="Typo.h5" Class="ml-3">Concept</MudText>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" OnClick="OpenSettings" />
    </MudAppBar>
    <MudMainContent>
        <CascadingValue Value="@ViewModel.ConceptCategories">
            @Body
        </CascadingValue>
        <MudOverlay @bind-Visible="isVisible" DarkBackground="true" AutoClose="true">
            <MudPaper Elevation="2">
                @*<MudListItem>
                    <MudSwitch @bind-Checked="true" Color="Color.Primary" Label="Default" />
                </MudListItem>
                <MudDivider />*@
                @*<MudListItem>
                    <MudSwitch @bind-Checked="@settings.MySwitch" Color="Color.Primary" Label="My Concepts" />
                </MudListItem>
                <MudDivider />*@
                @*<MudListItem>
                    <MudSwitch @bind-Checked="@settings.YourSwitch" Color="Color.Primary" Label="Your Concepts" />
                </MudListItem>*@
                @for (int i = 0; i < ViewModel.ConceptCategories.Count(); i++)
                {
                    int index = i;

                    <MudListItem>
                        <MudSwitch @bind-Checked="@ViewModel.ConceptCategories[index].Enabled" Color="Color.Primary" Label="@ViewModel.ConceptCategories[index].DisplayName" />
                    </MudListItem>
                }
            </MudPaper>
        </MudOverlay>
    </MudMainContent>
</MudLayout>

@code {
    private bool isVisible;

    public void OpenSettings()
    {
        isVisible = true;
        StateHasChanged();
    }
}